---
import AuthenticationLayout from '@/nexus/client/layouts/auth.astro'

const TITLE = 'Nexus - opret virksomhed'
const BACK = '/authentication/signup/business'
const NEXT = '/authentication/signup/business/owners/contacts'
---

<AuthenticationLayout title={TITLE} greeting="Velkommen" back={BACK}>
    <p>Hvem ejer virksomheden?</p>
    <form flex flex-col flex-center p="2rem 0" w="42rem" gap="2rem">
        <button
            cursor-cell
            circle
            bg="btn-secondary-bg"
            color="btn-secondary-text"
            w="2.5rem"
            h="2.5rem"
            id="add-owner"
            elevated>+</button
        >
    </form>
    <a
        href={NEXT}
        w="32rem"
        elevated
        h="3rem"
        bg="btn-primary-bg"
        color="btn-primary-text"
        transition:name="primary-button">NÃ¦ste</a
    >
    <template>
        <div ml="4rem" id="owner-field" flex flex-items-end flex-justify-center gap="2rem" w-full>
            <div flex flex-col gap="0.5rem" w-full>
                <label for="owner-firstname">Fornavn</label>
                <input type="text" elevated w-full h="3rem" name="owner-firstname" elevated />
            </div>
            <div flex flex-col gap="0.5rem" w-full>
                <label for="owner-surname">Efternavn</label>
                <input type="text" elevated w-full h="3rem" name="owner-surname" elevated />
            </div>
            <button m="0.5rem 0" elevated circle w="2rem" h="2rem" bg="btn-secondary-bg" color="btn-secondary-text"
                >-</button
            >
        </div>
    </template>
</AuthenticationLayout>
<script>
    import { $CreateCompany } from '@/nexus/client/stores'

    const mutateEvent = (field: 'firstname' | 'surname', index: number) => (event: Event) => {
        const target = event.target as HTMLInputElement
        target.value = target.value.charAt(0).toUpperCase() + target.value.slice(1)
        $CreateCompany.mutateOwner(index, field, target.value)
    }

    const deleteEvent = (index: number, clone: HTMLDivElement) => () => {
        $CreateCompany.removeOwner(index)
        clone.remove()
    }

    document.addEventListener('astro:page-load', () => {
        const form = document.querySelector('form') as HTMLFormElement | undefined
        const button = document.getElementById('add-owner') as HTMLButtonElement | undefined
        const template = document.getElementsByTagName('template')[0] as HTMLTemplateElement | undefined

        if (!form || !button || !template) return

        const field = template.content.getElementById('owner-field') as HTMLDivElement

        const createField = (index: number) => {
            const clone = field.cloneNode(true) as HTMLDivElement

            const firstname = clone.querySelector('input[name="owner-firstname"]') as HTMLInputElement
            const firstnameLabel = clone.querySelector('label[for="owner-firstname"]') as HTMLLabelElement
            const surname = clone.querySelector('input[name="owner-surname"]') as HTMLInputElement
            const surnameLabel = clone.querySelector('label[for="owner-surname"]') as HTMLLabelElement
            const remove = clone.querySelector('button') as HTMLButtonElement

            firstname.addEventListener('input', mutateEvent('firstname', index))
            surname.addEventListener('input', mutateEvent('surname', index))
            remove && remove.addEventListener('click', deleteEvent(index, clone))

            firstname.value = $CreateCompany.store.get().owners[index].firstname
            surname.value = $CreateCompany.store.get().owners[index].surname

            firstname.id = `owner-firstname-${index}`
            firstnameLabel.htmlFor = `owner-firstname-${index}`
            surname.id = `owner-surname-${index}`
            surnameLabel.htmlFor = `owner-surname-${index}`

            return clone
        }

        $CreateCompany.store.get().owners.map((_, index) => {
            const clone = createField(index)
            if (index === 0) clone.querySelector('button')!.remove()
            if (index === 0) clone.style.margin = '0 4rem'

            form.insertBefore(clone, button)
        })

        button.addEventListener('click', (event) => {
            event.preventDefault()

            $CreateCompany.addOwner()

            const clone = createField($CreateCompany.store.get().owners.length - 1)

            form.insertBefore(clone, button)
        })
    })
</script>
