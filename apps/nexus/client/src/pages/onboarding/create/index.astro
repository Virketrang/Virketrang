---
import OnboardingLayout from '../../../layouts/onboarding.astro'
import Enum from '@/enums/index'
import { Input, Select } from '../../../components'

const corporateFormOptions = [
    { value: Enum.CORPORATE_FORM.ENKELTMANDSVIRKSOMHED, name: Enum.CORPORATE_FORM.ENKELTMANDSVIRKSOMHED },
    { value: Enum.CORPORATE_FORM.INTERESSENTSKAB, name: Enum.CORPORATE_FORM.INTERESSENTSKAB },
    { value: Enum.CORPORATE_FORM.ANPARTSSELSKAB, name: Enum.CORPORATE_FORM.ANPARTSSELSKAB },
    { value: Enum.CORPORATE_FORM.AKTIESELSKAB, name: Enum.CORPORATE_FORM.AKTIESELSKAB },
    { value: Enum.CORPORATE_FORM.KOMMANDITSELSKAB, name: Enum.CORPORATE_FORM.KOMMANDITSELSKAB }
]

const employerOptions = [
    { value: 'true', name: 'Ja' },
    { value: 'false', name: 'Nej' }
]

const accountingClassOptions = [
    { value: Enum.ACCOUNTING_CLASS.A, name: Enum.ACCOUNTING_CLASS.A },
    { value: Enum.ACCOUNTING_CLASS.B1, name: Enum.ACCOUNTING_CLASS.B1 },
    { value: Enum.ACCOUNTING_CLASS.B2, name: Enum.ACCOUNTING_CLASS.B2 },
    { value: Enum.ACCOUNTING_CLASS.C1, name: Enum.ACCOUNTING_CLASS.C1 },
    { value: Enum.ACCOUNTING_CLASS.C2, name: Enum.ACCOUNTING_CLASS.C2 },
    { value: Enum.ACCOUNTING_CLASS.D, name: Enum.ACCOUNTING_CLASS.D }
]

const title = 'Nexus - opret virksomhed'
const href = '/onboarding/create/address'
---

<OnboardingLayout {title}>
    <main flex flex-column align-center justify-center gap-5>
        <form
            grid
            style="padding: 2rem 0; width: 32rem; grid-template-columns: repeat(4, 1fr); grid-template-rows: repeat(4, 1fr);"
            gap-2
            transition:name="form"
            transition:animate="slide"
        >
            <Input label="Virksomhedsnavn" name="company_name" column="1 / 5" row="1" />
            <Input label="Selskabstype" name="corporate_form" column="1 / 4" row="2" />
            <Input label="CVR" name="company_number" column="4 / 5" row="2" />
            <Select label="Arbejdsgiver" name="employer" column="1 / 3" row="3">
                <option value="true">Ja</option>
                <option value="false">Nej</option>
            </Select>
            <Select label="Regnskabsklasse" name="accounting_class" column="3 / 5" row="3">
                {accountingClassOptions.map((option) => <option value={option.value}>{option.name}</option>)}
            </Select>
            <div flex flex-column gap-2 style="grid-column: 1 / 5; grid-row: 4;">
                <a
                    {href}
                    w-full
                    style="height: 3rem;"
                    btn-primary-bg
                    color="btn-primary-text"
                    transition:name="primary-button">NÃ¦ste</a
                >
                <a transition:name="back" href="/onboarding">Tilbage</a>
            </div>
        </form>
    </main>
</OnboardingLayout>
<style>
    main {
        height: calc(100vh - 88px);
    }
</style>
<script>
    import { $CreateCompany } from '@/nexus/client/stores'

    document.addEventListener('astro:page-load', () => {
        const companyName = document.getElementById('company_name') as HTMLInputElement
        const corporateForm = document.getElementById('corporate_form') as HTMLInputElement
        const companyNumber = document.getElementById('company_number') as HTMLInputElement
        const employer = document.getElementById('employer') as HTMLSelectElement
        const accountingClass = document.getElementById('accounting_class') as HTMLSelectElement

        if (!companyName || !corporateForm || !companyNumber || !employer || !accountingClass) {
            return
        }

        companyName.value = $CreateCompany.get().company_name
        corporateForm.value = $CreateCompany.get().corporate_form
        companyNumber.value = $CreateCompany.get().company_number
        employer.value = $CreateCompany.get().employer
        accountingClass.value = $CreateCompany.get().accounting_class

        companyName.addEventListener('input', (event: Event) => {
            const target = event.target as HTMLInputElement
            $CreateCompany.set({ ...$CreateCompany.get(), company_name: target.value })
        })

        corporateForm.addEventListener('input', (event: Event) => {
            const target = event.target as HTMLInputElement
            $CreateCompany.set({ ...$CreateCompany.get(), corporate_form: target.value as Enum.CORPORATE_FORM })
        })

        companyNumber.addEventListener('input', (event: Event) => {
            const target = event.target as HTMLInputElement
            $CreateCompany.set({ ...$CreateCompany.get(), company_number: target.value })
        })

        employer.addEventListener('change', (event: Event) => {
            const target = event.target as HTMLInputElement
            $CreateCompany.set({ ...$CreateCompany.get(), employer: target.value as 'true' | 'false' })
        })

        accountingClass.addEventListener('change', (event: Event) => {
            const target = event.target as HTMLInputElement
            $CreateCompany.set({ ...$CreateCompany.get(), accounting_class: target.value as Enum.ACCOUNTING_CLASS })
        })
    })
</script>
