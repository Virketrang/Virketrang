---
import { Button, Paragraph, Form, Field, Label, Text, Div } from '@resolut/solid'
import AuthenticationLayout from '@/nexus/client/layouts/auth.astro'

const TITLE = 'Nexus - opret virksomhed'
const BACK = '/authentication/signup/business'
const NEXT = '/authentication/signup/business/owners/contacts'
---

<AuthenticationLayout title={TITLE} greeting="Velkommen" back={BACK}>
    <Paragraph>Hvem ejer virksomheden?</Paragraph>
    <Form flex vertical center padding="2rem 0" width="32rem" gap="2rem">
        <Button cursor:cell id="add-owner" elevated circle medium secondary>+</Button>
    </Form>
    <Button href={NEXT} width="32rem" transition:name="primary-button">NÃ¦ste</Button>
    <template>
        <Div margin="0 0 0 4rem" id="owner-field" flex align:end justify:center gap="2rem">
            <Field flex vertical gap="0.5rem">
                <Label for="owner-firstname">Fornavn</Label>
                <Text name="owner-firstname" elevated />
            </Field>
            <Field flex vertical gap="0.5rem">
                <Label for="owner-surname">Efternavn</Label>
                <Text name="owner-surname" elevated />
            </Field>
            <Button margin="0.5rem 0" elevated circle small secondary>-</Button>
        </Div>
    </template>
</AuthenticationLayout>
<script>
    import { $CreateCompany } from '@/nexus/client/stores'

    const mutateEvent = (field: 'firstname' | 'surname', index: number) => (event: Event) => {
        const target = event.target as HTMLInputElement
        target.value = target.value.charAt(0).toUpperCase() + target.value.slice(1)
        $CreateCompany.mutateOwner(index, field, target.value)
    }

    const deleteEvent = (index: number, clone: HTMLDivElement) => () => {
        $CreateCompany.removeOwner(index)
        clone.remove()
    }

    document.addEventListener('astro:page-load', () => {
        const form = document.querySelector('form') as HTMLFormElement | undefined
        const button = document.getElementById('add-owner') as HTMLButtonElement | undefined
        const template = document.getElementsByTagName('template')[0] as HTMLTemplateElement | undefined

        if (!form || !button || !template) return

        const field = template.content.getElementById('owner-field') as HTMLDivElement

        const createField = (index: number) => {
            const clone = field.cloneNode(true) as HTMLDivElement

            const firstname = clone.querySelector('input[name="owner-firstname"]') as HTMLInputElement
            const firstnameLabel = clone.querySelector('label[for="owner-firstname"]') as HTMLLabelElement
            const surname = clone.querySelector('input[name="owner-surname"]') as HTMLInputElement
            const surnameLabel = clone.querySelector('label[for="owner-surname"]') as HTMLLabelElement
            const remove = clone.querySelector('button') as HTMLButtonElement

            firstname.addEventListener('input', mutateEvent('firstname', index))
            surname.addEventListener('input', mutateEvent('surname', index))
            remove && remove.addEventListener('click', deleteEvent(index, clone))

            firstname.value = $CreateCompany.store.get().owners[index].firstname
            surname.value = $CreateCompany.store.get().owners[index].surname

            firstname.id = `owner-firstname-${index}`
            firstnameLabel.htmlFor = `owner-firstname-${index}`
            surname.id = `owner-surname-${index}`
            surnameLabel.htmlFor = `owner-surname-${index}`

            return clone
        }

        $CreateCompany.store.get().owners.map((_, index) => {
            const clone = createField(index)
            if (index === 0) clone.querySelector('button')!.remove()
            if (index === 0) clone.style.margin = '0 4rem'

            form.insertBefore(clone, button)
        })

        button.addEventListener('click', (event) => {
            event.preventDefault()

            $CreateCompany.addOwner()

            const clone = createField($CreateCompany.store.get().owners.length - 1)

            form.insertBefore(clone, button)
        })
    })
</script>
