---
import { Button, Form, Field, Label, Text } from '@resolut/solid'
import AuthenticationLayout from '@/apps/nexus/client/src/layouts/auth.astro'

const TITLE = 'Nexus - opret medarbejder'
const BACK = '/authentication/signup/employee/contacts'
const NEXT = '/authentication/signup/employee/bank-account'
---

<AuthenticationLayout title={TITLE} greeting="Velkommen" back={BACK}>
    <Form grid columns="repeat(4, 1fr)" rows="repeat(2, 1fr)" gap="2rem" width="32rem">
        <Field flex vertical gap="0.5rem" column="1 / 4" row={1}>
            <Label for="streetName" required>Gadenavn</Label>
            <Text name="streetName" stretch />
        </Field>
        <Field flex vertical gap="0.5rem" column="4 / 5" row={1}>
            <Label for="streetNumber" required>Gadenummer</Label>
            <Text name="streetNumber" stretch />
        </Field>
        <Field flex vertical gap="0.5rem" column="1 / 2" row={2}>
            <Label for="postalCode" required>Postnummer</Label>
            <Text name="postalCode" stretch />
        </Field>
        <Field flex vertical gap="0.5rem" column="2 / 5" row={2}>
            <Label for="city" required>By</Label>
            <Text name="city" stretch />
        </Field>
    </Form>
    <Button href={NEXT} stretch transition:name="primary-button">NÃ¦ste</Button>
</AuthenticationLayout>
<script>
    import { $CreateEmployee } from '@/nexus/client/stores'

    document.addEventListener('astro:page-load', () => {
        const streetName = document.getElementById('streetName') as HTMLInputElement
        const streetNumber = document.getElementById('streetNumber') as HTMLInputElement
        const postalCode = document.getElementById('postalCode') as HTMLInputElement
        const city = document.getElementById('city') as HTMLInputElement

        if (!streetName || !streetNumber || !postalCode || !city) return

        streetName.addEventListener('input', (event) => {
            const target = event.target as HTMLInputElement
            $CreateEmployee.mutate('streetName', target.value)
        })

        streetNumber.addEventListener('input', (event) => {
            const target = event.target as HTMLInputElement
            $CreateEmployee.mutate('streetNumber', target.value)
        })

        postalCode.addEventListener('input', (event) => {
            const target = event.target as HTMLInputElement
            $CreateEmployee.mutate('postalCode', target.value)
        })

        city.addEventListener('input', (event) => {
            const target = event.target as HTMLInputElement
            $CreateEmployee.mutate('city', target.value)
        })
    })
</script>
